{"ast":null,"code":"var _jsxFileName = \"/Users/tauseef/Desktop/CSC 436/CSC-436-Lab-2/src/UserBar.js\";\nimport React from 'react';\nimport Login from './Login';\nimport Logout from './Logout';\nimport Register from './Register';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Userbar({\n  handleLogin,\n  handleLogout,\n  currentUser\n}) {\n  const mockLogin = e => {\n    e.preventDefault();\n    const username = e.target['login-username'].value;\n    handleLogin(username);\n  };\n  const mockLogout = e => {\n    e.preventDefault();\n    handleLogout();\n  };\n  const mockRegister = e => {\n    e.preventDefault();\n    // Since it's a mock, we won't do anything here for registering\n    // In a real app, you'd validate and maybe store the new user info\n  };\n\n  if (currentUser) {\n    return /*#__PURE__*/_jsxDEV(Logout, {\n      user: currentUser,\n      handleLogout: mockLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Login, {\n        handleLogin: mockLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Register, {\n        handleRegister: mockRegister\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n}\n_c = Userbar;\nvar _c;\n$RefreshReg$(_c, \"Userbar\");","map":{"version":3,"names":["React","Login","Logout","Register","jsxDEV","_jsxDEV","Fragment","_Fragment","Userbar","handleLogin","handleLogout","currentUser","mockLogin","e","preventDefault","username","target","value","mockLogout","mockRegister","user","fileName","_jsxFileName","lineNumber","columnNumber","children","handleRegister","_c","$RefreshReg$"],"sources":["/Users/tauseef/Desktop/CSC 436/CSC-436-Lab-2/src/UserBar.js"],"sourcesContent":["import React from 'react';\nimport Login from './Login';\nimport Logout from './Logout';\nimport Register from './Register';\n\nexport default function Userbar({ handleLogin, handleLogout, currentUser }) {\n    const mockLogin = (e) => {\n        e.preventDefault();\n        const username = e.target['login-username'].value;\n        handleLogin(username);\n    };\n\n    const mockLogout = (e) => {\n        e.preventDefault();\n        handleLogout();\n    };\n\n    const mockRegister = (e) => {\n        e.preventDefault();\n        // Since it's a mock, we won't do anything here for registering\n        // In a real app, you'd validate and maybe store the new user info\n    };\n\n    if (currentUser) {\n        return (\n            <Logout user={currentUser} handleLogout={mockLogout} />\n        );\n    } else {\n        return (\n            <>\n                <Login handleLogin={mockLogin} />\n                <Register handleRegister={mockRegister} />\n            </>\n        );\n    }\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,eAAe,SAASC,OAAOA,CAAC;EAAEC,WAAW;EAAEC,YAAY;EAAEC;AAAY,CAAC,EAAE;EACxE,MAAMC,SAAS,GAAIC,CAAC,IAAK;IACrBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,QAAQ,GAAGF,CAAC,CAACG,MAAM,CAAC,gBAAgB,CAAC,CAACC,KAAK;IACjDR,WAAW,CAACM,QAAQ,CAAC;EACzB,CAAC;EAED,MAAMG,UAAU,GAAIL,CAAC,IAAK;IACtBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBJ,YAAY,CAAC,CAAC;EAClB,CAAC;EAED,MAAMS,YAAY,GAAIN,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACA;EACJ,CAAC;;EAED,IAAIH,WAAW,EAAE;IACb,oBACIN,OAAA,CAACH,MAAM;MAACkB,IAAI,EAAET,WAAY;MAACD,YAAY,EAAEQ;IAAW;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAE/D,CAAC,MAAM;IACH,oBACInB,OAAA,CAAAE,SAAA;MAAAkB,QAAA,gBACIpB,OAAA,CAACJ,KAAK;QAACQ,WAAW,EAAEG;MAAU;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjCnB,OAAA,CAACF,QAAQ;QAACuB,cAAc,EAAEP;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eAC5C,CAAC;EAEX;AACJ;AAACG,EAAA,GA9BuBnB,OAAO;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}